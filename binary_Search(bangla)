                                                                          সার্চ(বাইনারী ও লিনিয়ার)
                                                                          ---------------------

সার্চিং অ্যলগরিদমের মধ্যে একটা বিখ্যাত অ্যলগরিদম হলো বাইনারী সার্চ। তবে সার্চিং এর ব্যাসিক অ্যলগরিদম হলো লিনিয়ার সার্চ। বাইনারী সার্চ কেন বিখ্যাত তা বোঝার জন্য আমাদের লিনিয়ার সার্চ সম্পর্কে ধারণা থাকা
লাগবে। তাই এই ব্লগে আমি লিনিয়ার সার্চ ও বাইনারী সার্চ নিয়ে লিখব। আগেই বলে রাখি আমি আমার নিজের নলেজ বাড়ানোর জন্য লিখি,আমি অভিজ্ঞ লেখক নই।
লিনিয়ার সার্চঃ লিনিয়ার কথার অর্থ হলো সরলরৈখিক । কোন অ্যাারে,বা ভেক্টরে বা সমজাতীয় কোন ডেটা স্ট্যাকচারে কোন বিশেষ উপাদান খুঁজে বাহির করার জন্য আমরা লিনিয়ার সার্চ ব্যবহার করি।মনে করি আমাদের
একটি অ্যাারে আছে যার মোট উপাদান সংখ্যা ১০।অর্থাৎ ইনডেক্স ০-৯।আমরা কোনো উপাদান x কে ওই অ্যাারেতে খুঁজবো। আমরা করব কি...প্রথমে আমরা ০-৯ পর্যন্ত একটা লুপ চালাবো,সেই লুপের কাজ হবে,
প্রথমে অ্যাারের ০ তম ইনডেক্সের সাথে x এর তুলনা করা,যদি x==a[0] হয় তাহলে আমাদের আর পরবর্তি ইনডেক্সের জন্য তুলনা না করলেও চলবে।অর্থাৎ আমরা লুপ ব্রেক করে দিব,আর যদি     x!=a[0] হয় 
তাহলে আমরা ইনডেক্স এর মান ১ বৃদ্ধি করব,এবং দেখবো x==a[1] কিনা !...এভাবে চলতে থাকবে,আমরা ৯ তম ইনডেক্স পর্যন্ত একই কাজ করব,অ্যাারের কোন উপাদান যদি  x সমান না হয় তাহলে আমরা
-1 রিটার্ন করব।

ইমপ্লিমেন্টেশনঃ
int Linear_Search(int a[ ],int n,int x)
{
	for(int i=0;i<n;i++)
	{
   if(a[i] == x) return i;
	}
	return  -1;
}

এই সার্চিং এলগরিদমের বেস্ট কেসের জন্য আমাদের ১ বার লুপ চালানো লাগবে,আর সবথেকে খারাপ কেসের জন্য আমাদের n সংখ্যক বার লুপ চালনো লাগবে। অর্থাৎ,টাইম কমপ্লেক্সিটি O(n).
এবার আমরা আসব,বাইনারী সার্চে,...


বাইনারী সার্চঃ বাইনারী কথার অর্থ ২।এই সার্চিং এলগরিদমে আমরা বারবার আমাদের ডেটাকে ২ ভাগে ভাগ করতে হবে,তাই এই সার্চিং এলগরিদমের নাম বাইনারী সার্চ।এই এলগরিদমকে অনেকে বাইসেকশন পদ্ধতি 
বলেন।

এখন আমরা একটি গেম খেলা নিয়ে গল্প করব।গেমের নাম দেওয়া যাক,finding the hidden number!
আমাদের  কাছে ১০০০০ টি নম্বার আছে,তারা সবাই সর্টেট অডারেই আছে।তার মধ্যে থেকে একটা বিশেষ সংখ্যা "১৯৯৯" কে  খুঁজে বাহির করতে হবে।আমরা প্রথমে খোঁজার জন্য সম্ভাব্য এরিয়া বের করব,তারপর বারবার
২ দিতে ভাগ করে আমরা সেই সম্ভাব্য এরিয়ার লেন্থ কমাবো...
উপরোক্ত কাজ ১ বার করলে আমরা আমাদের এরিয়া ১০০০০ থেকে কমিয়ে ৫০০০ এ নিয়ে আসতে পারব,তারপর ২৫০০...এভাবে চলতে থাকবে।
আশা করি এলগরিদমে বিষয়টা ক্লিয়ার করতে পারব !!!

বাইনারী সার্চের এলগরিদম নিন্মরূপঃ
স্টেপ ১ । প্রথমে আমাদের অ্যাারে বা ভেক্টরকে সর্টিং করতে হবে।এজন্য আমরা মার্জ সর্ট বা বাবল সর্ট বা যে কোন সর্টিং এলগরিদম ব্যবহার করব।
স্টেপ ২। ডেটা সেটের মিডল এলিমেন্ট বাহির করব।
স্টেপ ৩।সার্চ এলিমেন্ট বা কী কে আমরা মিডল এলিমেন্টের সাথে তুলনা করব।
স্টেপ ৪।যদি সার্চ এলিমেন্ট = মিডল এলিমেন্ট হয় তাহলে  ৯ নং ধাপে যাবো। না হলে ৫ নং ধাপে যাব। 
স্টেপ ৫।এবার আমরা দেখব সার্চ এলিমেন্ট (কী) মিডল এলিমেন্টের বড় না ছোট। বড় হলে আমরা ৬ নং ধাপে যাব।আর ছোট হলে ৭ নং ধাপে।
স্টেপ ৬।আমাদের সার্চ এলিমেন্ট মিডল এলিমেন্টের ডানপাশে আছে। তারপর ডেটা সেটের ডানপাশের অর্ধেক এলিমেন্টের জন্য আমরা স্টেপ ২ থেকে ৫ পুনরায় চালাবো। 
স্টেপ ৭।আমাদের সার্চ এলিমেন্ট মিডল এলিমেন্টের বামপাশে আছে। তারপর ডেটা সেটের বামপাশের  অর্ধেক এলিমেন্টের জন্য আমরা স্টেপ ২ থেকে ৫ পুনরায় চালাবো। 
স্টেপ ৮।যতক্ষণ আমাদের ডানপাশের এলিমেন্ট = বামপাশের এলিমেন্ট না হয় ততক্ষণ আমরা ২-৭ এর কাজ গুলো বারবার করব।আমাদের কী এলিমেন্ট আমরা যদি পেয়ে যাই তাহলে আমরা সেই এলিমেন্টের ইনডেক্স
        রিটার্ণ করব,না  পাইলে -1 রিটার্ণ করব।
স্টেপ ৯।কর্ম সম্পাদিত হইলো!!!
ইমপ্লিমেন্টেশনঃ

int Binary_Search(int a[ ],int n,int x)  // এখানে a[ ] হলো সর্টেট অ্যাারে,যাকে আমি মেইন ফাংশন থেকে সর্ট  করেছি !!!
{
	int h,m,l ; //h = high , l=low, m = mid
	l=0;
  h=n-1;
	while(l<=h)
	{
		m=(l+h)/2;
    if (a[m] == x)     return m; 
    if (a[m] < x )   l = m + 1; 
    else h=m-1;
  }
	return -1;
}          

এই এল্গরিদমের কম্পেক্সিটি হলো O(log 2 n).
আমি আগেই বলছি বাইনারী সার্চ বিখ্যাত এলগরিদম।কেন তা বিখ্যাত তা এখন ব্যাখ্যা করব।
মনে করা যাক,আমাদের কাছে একটা ডিকশনারী আছে,যেখান থেকে কোন বিশেষ ওয়ার্ড আমাদের খুঁজে বাহির করতে হবে।ধরা যাক আমাদের ডিকশনারীতে ৫০০০ ওয়ার্ড আছে। লিনিয়ার সার্চে প্রতিটি তুলনা করতে
যদি ১ সেকেন্ড সময় লাগে তাহলে worst case এ আমাদের মোট ৫০০০ সেকেন্ড সময় লাগবে প্রোগ্রামটির ঠিকঠাক আউটপুট দিতে।অর্থাৎ রান বাটনে ক্লিক করার পর আমাদের ১ ঘণ্টা ২৩ মিনিট অপেক্ষা করা লাগবে।
কিন্তু এই কাজ যদি আমরা বাইনারী সার্চ ব্যবহার করে করি তাহলে worst case এ আমাদের log 2 (5000) = 12.28 সেকেন্ড সময় লাগবে।অর্থাৎ যাদের সময় বাচানোর হাতিয়ার হতে পারে বাইনারী সার্চ।তাছাড়া যেকোন
অনলাইন জাজে বাইনারী সার্চ আমাদের TLE থেকে ১০০ হাত দূরে রাখে !!!


শাহারিয়ার আমিন
রুয়েট,সি.এস.ই - ১৯।
		
		
        
        
	
 


  
